#! /bin/sh
### BEGIN INIT INFO
# Provides:          ofp-ofc-ryu
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start/Stop OF-Patch OFC by ryu
### END INIT INFO


PATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/bin

DESC="ofp-ofc-ryu"
NAME=ofp-ofc-ryu

APPDIR=/usr/local/lib/ofp_ofc_ryu
APPFILE=$APPDIR/ofp_ofc_ryu.py

PIDFILE=/var/run/$NAME.pid

WSGI_PORT=28080
WSGI_HOST="localhost"
LISTEN_PORT=6641

DAEMON=/usr/local/bin/ryu-manager
DAEMON_ARGS="--ofp-tcp-listen-port $LISTEN_PORT --wsapi-port $WSGI_PORT --wsapi-host $WSGI_HOST $APPFILE"

SCRIPTNAME=/etc/init.d/$NAME

if [ ! -x "$DAEMON" ]; then
  echo $DAEMON is not found or not executable.
  exit 0
fi
if [ ! -r "$APPFILE" ]; then
  echo $APPFILE is not found or not readable.
  exit 0
fi
#[ -r "$APPFILE" ] || exit 0

[ -r /etc/default/$NAME ] && . /etc/default/$NAME

. /lib/init/vars.sh

. /lib/lsb/init-functions


do_start()
{
  start-stop-daemon --start --quiet --background --make-pidfile \
    --chdir $APPDIR \
    --pidfile $PIDFILE \
    --exec $DAEMON \
    --test > /dev/null \
    || return 1
  start-stop-daemon --start --quiet --background --make-pidfile \
    --chdir $APPDIR \
    --pidfile $PIDFILE \
    --exec $DAEMON \
    -- $DAEMON_ARGS \
    || return 2
}

do_stop()
{
	#start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME
	start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE
	RETVAL="$?"
	[ "$RETVAL" = 2 ] && return 2
	start-stop-daemon --stop --quiet --oknodo --retry=0/30/KILL/5 --exec $DAEMON
	[ "$?" = 2 ] && return 2
	rm -f $PIDFILE
	return "$RETVAL"
}

do_reload() {
	start-stop-daemon --stop --signal 1 --quiet --pidfile $PIDFILE --name $NAME
	return 0
}

case "$1" in
  start)
	#[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		#0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		#2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
		0) log_end_msg 0 ;;
		1) log_end_msg 0 ;;
		2) log_end_msg 1 ;;
	esac
	;;
  stop)
	#[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		#0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		#2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
		0|1) log_end_msg 0 ;;
		2) log_end_msg 1 ;;
	esac
	;;
  status)
       status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
       ;;
  restart|force-reload)
	#
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
		;;
	  *)
	  	# Failed to stop
		log_end_msg 1
		;;
	esac
	;;
  *)
	#echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" >&2
	echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
	exit 3
	;;
esac

:

